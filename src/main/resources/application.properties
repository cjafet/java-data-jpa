server.port=7777

#spring.h2.console.enabled=true
#spring.datasource.url=jdbc:h2:file:~/test
#spring.datasource.url=jdbc:h2:mem:~/test
#spring.datasource.username=sa
#spring.datasource.password=
#spring.h2.console.path=/h2-console/

# Depending on your driver version and locale, you may run into issues with Spring Boot retrieving
# the server timezone from MySQL and deciding that it is invalid. This is because certain time zones,
# such as ‘PDT’, Pacific Daylight Time, are not recognized by some Java MySQL connectors.
# spring.datasource.url=jdbc:mysql://localhost:3306/exampledb?serverTimezone=UTC

spring.datasource.url=jdbc:mysql://localhost:3306/testdb
spring.datasource.username=root
spring.datasource.password=123456


spring.datasource.initialization-mode=always
spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# This will cause Hibernate to report on the number of JDBC Statements
# prepared and executed during each session, as well as their time costs.
spring.jpa.properties.hibernate.generate_statistics=true
logging.level.org.hibernate.stat=DEBUG

# For Hibernate 5.4.5 and later you can also use this property to cause
# any single query longer than the specified duration to print a message to the log.
hibernate.session.events.log.LOG_QUERIES_SLOWER_THAN_MS=25


# com.plants.datasource.url=jdbc:mysql://localhost:3306/plant
#spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
#spring.datasource.url=jdbc:mysql://172.17.0.1:3306/plant
#spring.datasource.username=spring
#spring.datasource.password=spring123456
#spring.datasource.initialization-mode=always
#spring.jpa.hibernate.dll-auto=update
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true

#  create schema exampledb;
#  create user 'sa'@'localhost' identified by 'sa123456';
#  grant all on plant.* to 'sa'@'localhost';